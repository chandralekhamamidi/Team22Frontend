{"version":3,"sources":["components/navBar.jsx","components/common/Select.jsx","components/pieChart.jsx","components/outletOverview.jsx","components/itemsales.jsx","components/tierOverview.jsx","components/CategoryView.jsx","components/categorysales.jsx","components/dashboard.jsx","components/login.jsx","components/Predict.jsx","App.js","reportWebVitals.js","index.js"],"names":["emailAndNames","name","email","NavBar","props","isLoggedIn","class","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","className","to","filter","item","src","alt","width","height","onClick","e","localStorage","removeItem","window","location","Select","onChange","value","isSearchable","disabled","default","options","map","option","charts","FusionCharts","ReactFusioncharts","fcRoot","PowerCharts","FusionTheme","dataSource","chart","showplotborder","plotfillalpha","hoverfillcolor","plottooltext","theme","category","label","color","tooltext","PieChart","dataFormat","React","Component","OutletOverview","getBarChartData","data","barChartData","Object","entries","key","push","chartType","loader","this","colors","hAxis","title","minValue","vAxis","rootProps","Itemsales","format","categories","TierOverview","arr","newValue","JSON","parse","tierLtevelData","chartArea","isStacked","tier","CategoryView","role","i","bar","groupWidth","legend","position","Categorysales","tier1_outlets","tier2_outlets","tier3_outlets","Dashboard","state","selectedoutletLocation","selectedoutletIdentifier","selectedCategory","itemNumber","overallSalesOfSelectedOutlet","overallSalesOfSelectedTier","overallSalesOfSelectedCategory","itemsInCategory","itemIdentifier","tableData","itemsalesData","categorysalesData","baseState","handleOutletChangeFetchCategories","a","currentTarget","requestOptions","method","headers","body","stringify","outlet","fetch","response","json","setState","searchData","console","log","searchsData","length","Outlet","Sales","handleTierlevelData","handleOutletIdentifier","handleCategoryLevelData","currVal","requestOptionsTwo","responseTwo","obj","categorysalesDataArray","outletSales","itemno","sales","getItem","isEmpty","keys","style","items","shouldItemRender","toLowerCase","indexOf","getItemValue","renderItem","highlighted","backgroundColor","target","onSelect","inputProps","placeholder","Table","striped","bordered","hover","index","Item_Fat_Content","Item_Identifier","Item_MRP","Item_Outlet_Sales","Item_Type","Item_Visibility","Item_Weight","Outlet_Establishment_Year","Outlet_Identifier","Outlet_Location_Type","Outlet_Size","Outlet_Type","loginDetails","password","Login","showWarningBanner","onSubmit","preventDefault","user","setItem","handleChange","data-dismiss","Predict","outletLocation","outletIdentifier","selectedItem","itemWeight","itemPrice","itemFatContent","itemVisibility","predictedValue","showPrediction","handleSelectCategory","handleSelect","getItemDetails","callPredict","requestJson","parseFloat","handleVisibilityChange","parseInt","paddingTop","paddingBottom","Badge","variant","min","max","step","paddingLeft","Alert","toFixed","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ee12a38.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst emailAndNames = [\n  {\n    name: \"Vaibhav\",\n    email: \"vaibhav@gmail.com\",\n  },\n  {\n    name: \"Kesiya\",\n    email: \"kesiya@gmail.com\",\n  },\n  {\n    name: \"Lekha\",\n    email: \"lekha@gmail.com\",\n  },\n  {\n    name: \"Sayali\",\n    email: \"sayali@gmail.com\",\n  },\n  {\n    name: \"Administrator\",\n    email: \"admin@gmail.com\",\n  },\n];\n\nexport const NavBar = (props) => {\n  const { isLoggedIn, email } = props;\n\n  const logout = (e) => {\n    localStorage.removeItem(\"isLoggedIn\");\n    localStorage.removeItem(\"name\");\n    window.location = \"/login\";\n  };\n\n  return (\n    <div>\n      <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n        <a class=\"navbar-brand\" href=\"#\">\n          GrocerSmart\n        </a>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          {isLoggedIn && (\n            <ul class=\"navbar-nav\">\n              <li class=\"nav-item active\">\n                <div className=\"nav-link\" href=\"\">\n                  <Link to=\"/\">Home</Link>\n                </div>\n              </li>\n              <li class=\"nav-item\">\n                <div className=\"nav-link\" href=\"\">\n                  <Link to=\"/predict\">Predict</Link>\n                </div>\n              </li>\n            </ul>\n          )}\n          <ul class=\"nav navbar-nav navbar-right ml-auto\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\">\n                {isLoggedIn\n                  ? emailAndNames.filter((item) => item.email === email)[0].name\n                  : \"\"}\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"navbar-brand\" href=\"#\">\n                {isLoggedIn ? (\n                  <img src=\"/download.png\" alt=\"\" width=\"30\" height=\"24\" />\n                ) : (\n                  \"\"\n                )}\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"navbar-brand\" onClick={logout}>\n                {isLoggedIn ? \"Logout\" : \"\"}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","const Select = (props) => {\n  return (\n    <div>\n      <select\n        className=\"form-select my-3\"\n        aria-label=\"Default select example\"\n        name={props.name}\n        id={props.name}\n        onChange={props.onChange}\n        value={props.value}\n        isSearchable\n        disabled={props.disabled}\n      >\n        <option value=\"\">{props.default}</option>\n        {props.options.map((option) => (\n          <option key={option} value={option}>\n            {option}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default Select;\n","import React from \"react\";\nimport FusionCharts from \"fusioncharts\";\nimport charts from \"fusioncharts/fusioncharts.charts\";\nimport ReactFusioncharts from \"react-fusioncharts\";\nimport FusionTheme from \"fusioncharts/themes/fusioncharts.theme.fusion\";\nimport PowerCharts from \"fusioncharts/fusioncharts.powercharts\";\n\ncharts(FusionCharts);\n\nReactFusioncharts.fcRoot(FusionCharts, PowerCharts, FusionTheme);\n\nconst dataSource = {\n  chart: {\n    /*  caption: \"Stores by location\", */\n    showplotborder: \"1\",\n    plotfillalpha: \"60\",\n    hoverfillcolor: \"#CCCCCC\",\n    plottooltext:\n      \"Number of stores in  <b>$label</b> are <b>$value</b>, which was $percentValue of parent category\",\n    theme: \"fusion\",\n  },\n  category: [\n    {\n      label: \"Tier 1\",\n      color: \"#f8bd19\",\n      value: 3,\n      tooltext:\n        \"Number of stores in  <b>$label</b> are <b>$value</b>, which was $percentValue of parent category\",\n      category: [\n        {\n          label: \"OUTO49\",\n          color: \"#f8bd19\",\n          category: [\n            {\n              label: \"Supermarket Type1\",\n              color: \"#f8bd19\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO46\",\n          color: \"#f8bd19\",\n          category: [\n            {\n              label: \"Supermarket Type1\",\n              color: \"#f8bd19\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO19\",\n          color: \"#f8bd19\",\n          category: [\n            {\n              label: \"Grocery Store\",\n              color: \"#f8bd19\",\n            },\n          ],\n        },\n      ],\n    },\n    {\n      label: \"Tier 2\",\n      color: \"#33ccff\",\n      value: 3,\n      tooltext:\n        \"Number of stores in  <b>$label</b> are <b>$value</b>, which was $percentValue of parent category\",\n      category: [\n        {\n          label: \"OUTO17\",\n          color: \"#33ccff\",\n          category: [\n            {\n              label: \"Supermarket Type1\",\n              color: \"#33ccff\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO45\",\n          color: \"#33ccff\",\n          category: [\n            {\n              label: \"Supermarket Type1\",\n              color: \"#33ccff\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO35\",\n          color: \"#33ccff\",\n          category: [\n            {\n              label: \"Supermarket Type1\",\n              color: \"#33ccff\",\n            },\n          ],\n        },\n      ],\n    },\n    {\n      label: \"Tier 3\",\n      color: \"#ffcccc\",\n      value: 4,\n      tooltext:\n        \"Number of stores in  <b>$label</b> are <b>$value</b>, which was $percentValue of parent category\",\n      category: [\n        {\n          label: \"OUTO10\",\n          color: \"#ffcccc\",\n          category: [\n            {\n              label: \"Grocery Store\",\n              color: \"#ffcccc\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO18\",\n          color: \"#ffcccc\",\n          category: [\n            {\n              label: \"Supermarket Type2\",\n              color: \"#ffcccc\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO13\",\n          color: \"#ffcccc\",\n          category: [\n            {\n              label: \"Supermarket Type1\",\n              color: \"#ffcccc\",\n            },\n          ],\n        },\n        {\n          label: \"OUTO27\",\n          color: \"#ffcccc\",\n          category: [\n            {\n              label: \"Supermarket Type3\",\n              color: \"#ffcccc\",\n            },\n          ],\n        },\n      ],\n    },\n  ],\n};\n\nclass PieChart extends React.Component {\n  render() {\n    return (\n      <ReactFusioncharts\n        type=\"multilevelpie\"\n        width=\"600\"\n        height=\"600\"\n        dataFormat=\"JSON\"\n        dataSource={dataSource}\n      />\n    );\n  }\n}\n\nexport default PieChart;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\nclass OutletOverview extends React.Component {\n  getBarChartData = (data) => {\n    const barChartData = [[\"categories\", \"Sales\"]];\n    for (const [key, value] of Object.entries(data)) {\n      barChartData.push([key, value]);\n    }\n    return barChartData;\n  };\n  render() {\n    return (\n      <div className=\"mt-5 mx-3\">\n        <Chart\n          className=\"mt-5\"\n          width=\"100%\"\n          height=\"400px\"\n          chartType=\"Bar\"\n          loader={<div>Loading Chart</div>}\n          data={this.getBarChartData(this.props.data)}\n          options={{\n            colors: ['#ffab91'],\n            /* title: \"Sales in each category\", */\n            hAxis: {\n              title: \"Total Population\",\n              minValue: 0,\n            },\n            vAxis: {\n              title: \"City\",\n            },\n          }}\n          rootProps={{ \"data-testid\": \"2\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default OutletOverview;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nclass Itemsales extends React.Component {\n  render() {\n    return (\n      <div className=\"mt-5 mx-3\">\n        <Chart\n          className=\"mt-5\"\n          width=\"100%\"\n          height=\"400px\"\n          chartType=\"Bar\"\n          loader={<div>Loading Chart</div>}\n          data={this.props.data}\n          \n          options={{\n            colors: ['skyblue'],\n            hAxis: {\n              title: \"Item_Outlet_Sales\",\n              minValue: 0,\n              format:'$'\n            },\n            vAxis: {\n              title: \"Sales in dollars\",\n            },\n          }}\n          rootProps={{ \"data-testid\": \"2\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Itemsales;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nvar categories = [\n  \"Snack Foods\",\n  \"Fruits and Vegetables\",\n  \"Household\",\n  \"Frozen Foods\",\n  \"Dairy\",\n  \"Baking Goods\",\n  \"Canned\",\n  \"Meat\",\n  \"Health and Hygiene\",\n  \"Soft Drinks\",\n  \"Others\",\n  \"Breads\",\n  \"Breakfast\",\n  \"Hard Drinks\",\n  \"Seafood\",\n  \"Starchy Foods\",\n];\nclass TierOverview extends React.Component {\n  getBarChartData = (data) => {\n    // console.log(\"original\", data);\n    const barChartData = [[\"outlets\", ...categories]];\n    for (const [key, value] of Object.entries(data)) {\n      const arr = [key];\n      let newValue = JSON.parse(value);\n      for (const [key, value] of Object.entries(newValue)) {\n        arr.push(value);\n      }\n      barChartData.push(arr);\n    }\n    return barChartData;\n  };\n  render() {\n    return (\n      <div>\n        <Chart\n          height={\"500px\"}\n          chartType=\"BarChart\"\n          loader={<div>Loading Chart</div>}\n          data={this.getBarChartData(this.props.tierLtevelData)}\n          options={{\n            /* title: `Sales of outlets in ${this.props.tier}`, */\n            chartArea: { width: \"50%\" },\n            isStacked: true,\n            hAxis: {\n              title: \"Total Sales\",\n              minValue: 0,\n            },\n            vAxis: {\n              title: this.props.tier,\n            },\n          }}\n          // For tests\n          rootProps={{ \"data-testid\": \"3\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TierOverview;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\n\nclass CategoryView extends React.Component {\n  getBarChartData = (data) => {\n    const barChartData = [[\"categories\", \"Sales\", { role: \"style\" }]];\n    const colors = [\"#b87333\", \"gold\"];\n    let i = 0;\n    for (const [key, value] of Object.entries(data)) {\n      barChartData.push([key, value, colors[i++]]);\n    }\n    return barChartData;\n  };\n  render() {\n    return (\n      <div>\n        <Chart\n          height={\"300px\"}\n          chartType=\"BarChart\"\n          loader={<div>Loading Chart</div>}\n          data={this.getBarChartData(this.props.data)}\n          options={{\n            /* title: \"Sales of a category based on Fat Content\", */\n            width: 600,\n            height: 400,\n            bar: { groupWidth: \"95%\" },\n            legend: { position: \"none\" },\n          }}\n          // For tests\n          rootProps={{ \"data-testid\": \"6\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CategoryView;\n","import React from \"react\";\nimport { Chart } from \"react-google-charts\";\nclass Categorysales extends React.Component {\n  render() {\n    return (\n      <div className=\"mt-5 mx-3\">\n        <Chart\n          className=\"mt-5\"\n          width=\"100%\"\n          height=\"400px\"\n          chartType=\"Bar\"\n          loader={<div>Loading Chart</div>}\n          data={this.props.data}\n          options={{\n            title: \"Top 5 Item Sales in each Category\",\n            hAxis: {\n              title: \"Item_Outlet_Sales\",\n              minValue: 0,\n            },\n            vAxis: {\n              title: \"Item_type\",\n            },\n          }}\n          rootProps={{ \"data-testid\": \"2\" }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Categorysales;","import React from \"react\";\nimport Select from \"./common/Select\";\nimport PieChart from \"./pieChart\";\nimport { isEmpty } from \"lodash\";\nimport OutletOverview from \"../components/outletOverview\";\nimport Autocomplete from \"react-autocomplete\";\nimport Table from \"react-bootstrap/Table\";\nimport Itemsales from \"../components/itemsales\";\nimport TierOverview from \"../components/tierOverview\";\nimport CategoryView from \"../components/CategoryView\";\nimport CategorySalesView from \"../components/categorysales\";\n\nvar tier1_outlets = [\"OUT049\", \"OUT046\", \"OUT019\"];\nvar tier2_outlets = [\"OUT045\", \"OUT035\", \"OUT017\"];\nvar tier3_outlets = [\"OUT027\", \"OUT013\", \"OUT018\", \"OUT010\"];\nconst tableData = [\n  {\n    id: \"1\",\n    name: \"Ghost in The Wires\",\n    author: \"Kevin Mitnick\",\n    released: \"08/15/2011\",\n  },\n  {\n    id: \"2\",\n    name: \"Console Wars\",\n    author: \"Blake J. Harris\",\n    released: \"05/13/2014\",\n  },\n  {\n    id: \"3\",\n    name: \"The Phoenix Project\",\n    author: \"Gene Kim, Kevin Behr, George Spafford\",\n    released: \"12/01/2017\",\n  },\n];\nclass Dashboard extends React.Component {\n  state = {\n    data: {\n      selectedoutletLocation: \"\",\n      selectedoutletIdentifier: \"\",\n      selectedCategory: \"\",\n      itemNumber: \"\",\n      overallSalesOfSelectedOutlet: [],\n      overallSalesOfSelectedTier: {},\n      overallSalesOfSelectedCategory: {},\n      itemsInCategory: [],\n    },\n    value: '',\n    itemIdentifier: [],\n    tableData: [],\n    itemsalesData: [],\n    categorysalesData: []\n  };\n  baseState = { ...this.state };\n\n  componentDidMount() {\n    const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    if (!isLoggedIn) {\n      window.location = \"/login\";\n    }\n  }\n\n  handleOutletChangeFetchCategories = async (e) => {\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ outlet: e.currentTarget.value }),\n    };\n    let response = await fetch(\"http://13.59.56.212:5000/getOutletOverview\", requestOptions);\n    response = await response.json();\n    data.overallSalesOfSelectedOutlet = response;\n    data.selectedCategory = \"\";\n    data.overallSalesOfSelectedCategory = \"\";\n    data.itemsInCategory = [];\n    this.setState({ data, tableData: [], value: \"\" });\n  };\n\n  searchData = async (e) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        \"Item_no\": this.state.value,\n        \"category\": this.state.data.selectedCategory,\n        \"outlet\": this.state.data.selectedoutletIdentifier\n      }),\n    };\n    let response = await fetch(\"http://13.59.56.212:5000/getitemdetailbasedOnitem\", requestOptions);\n    response = await response.json();\n    console.log(response)\n    let tableData = response.data\n    this.setState({ tableData })\n  }\n  searchsData = async (e) => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        \"Item_no\": this.state.value,\n      }),\n    };\n    let response = await fetch(\"http://13.59.56.212:5000/compareitemsalesacrossoutlets\", requestOptions);\n    response = await response.json();\n    let itemsalesData = [\n      ['Outlet', 'Sales']\n    ]\n    for (let i = 0; i < response.data.length; i++) {\n      let arr = [];\n      arr.push(response.data[i].Outlet);\n      arr.push(response.data[i].Sales);\n      itemsalesData.push(arr)\n    }\n    this.setState({ itemsalesData })\n  }\n\n  handleTierlevelData = async (e) => {\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ tier: e.currentTarget.value }),\n    };\n    let response = await fetch(\"http://13.59.56.212:5000/getTierLevelOverview\", requestOptions);\n    response = await response.json();\n    data.overallSalesOfSelectedTier = response;\n    data.selectedCategory = \"\";\n    data.selectedoutletIdentifier = \"\";\n    data.overallSalesOfSelectedCategory = \"\";\n    data.overallSalesOfSelectedOutlet = \"\";\n    this.setState({ data, value: \"\" });\n  };\n  handleOutletIdentifier = () => {\n    const data = { ...this.state.data };\n    if (data.selectedoutletLocation === \"Tier 1\") {\n      return tier1_outlets;\n    } else if (data.selectedoutletLocation === \"Tier 2\") {\n      return tier2_outlets;\n    } else if (data.selectedoutletLocation === \"Tier 3\") {\n      return tier3_outlets;\n    } else {\n      return [...tier1_outlets, ...tier2_outlets, ...tier3_outlets];\n    }\n  };\n  handleCategoryLevelData = async (e) => {\n    let currVal = e.currentTarget.value;\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = currVal;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        outlet: this.state.data.selectedoutletIdentifier,\n        category: currVal,\n      }),\n    };\n    let response = await fetch(\"http://13.59.56.212:5000/getItemFatContent\", requestOptions);\n    response = await response.json();\n    console.log(response);\n    data.overallSalesOfSelectedCategory = response;\n    //this.setState({ data });\n\n\n    //KEsiya code\n    console.log(console.log(this.state))\n    const requestOptionsTwo = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ category: currVal, outlet: this.state.data.selectedoutletIdentifier }),\n    };\n    let responseTwo = await fetch(\"http://13.59.56.212:5000/getitemnoBasedOnCategory\", requestOptionsTwo);\n    responseTwo = await responseTwo.json();\n    let arr = [];\n    for (let i = 0; i < responseTwo.data.length; i++) {\n      let obj = {};\n      obj[\"id\"] = i;\n      obj[\"label\"] = responseTwo.data[i]\n      arr.push(obj);\n    }\n    data.itemsInCategory = arr\n\n\n    //New Code\n    let categorysalesDataArray = [\n      ['itemno', 'Sales']\n    ]\n    for (let i = 0; i < 5; i++) {\n      let arr = [];\n      arr.push(responseTwo.outletSales[i].itemno);\n      arr.push(responseTwo.outletSales[i].sales);\n      categorysalesDataArray.push(arr)\n    }\n    console.log(categorysalesDataArray)\n    data.categorysalesData = categorysalesDataArray\n\n    this.setState({ data, value: \"\", tableData: [], itemsalesData: [] });\n  };\n  render() {\n    const outletTypes = [\"Tier 1\", \"Tier 2\", \"Tier 3\"];\n    return (\n      <div >\n\n        <div className='bannerImage'></div>\n        <div className=\"row container-fluid pr-0\">\n          <div className=\"col-3\">\n            <Select\n              name=\"selectedoutletLocation\"\n              value={this.state.data.selectedoutletLocation}\n              onChange={this.handleTierlevelData}\n              options={outletTypes}\n              default=\"Select Tier\"\n            />\n\n\n\n          </div>\n          <div className=\"col-3\">\n            <Select\n              name=\"selectedoutletIdentifier\"\n              value={this.state.data.selectedoutletIdentifier}\n              onChange={this.handleOutletChangeFetchCategories}\n              options={this.handleOutletIdentifier()}\n              default=\"Select Outlet\"\n              disabled={isEmpty(this.state.data.selectedoutletLocation)}\n            />\n          </div>\n          <div className=\"col-3\">\n            <Select\n              name=\"selectedCategory\"\n              value={this.state.data.selectedCategory}\n              onChange={this.handleCategoryLevelData}\n              options={Object.keys(\n                this.state.data.overallSalesOfSelectedOutlet\n              )}\n              default=\"Select category\"\n              disabled={\n                isEmpty(this.state.data.selectedoutletLocation) ||\n                isEmpty(this.state.data.selectedoutletIdentifier)\n              }\n            />\n\n\n\n          </div>\n          <div className=\"col-2\">\n            <div class=\"input-group mt-3 autocomplete\">\n              <Autocomplete style=\"width:100%\"\n                items={this.state.data.itemsInCategory}\n                shouldItemRender={(item, value) => item.label.toLowerCase().indexOf(value.toLowerCase()) > -1}\n                getItemValue={item => item.label}\n                renderItem={(item, highlighted) =>\n                  <div style=\"width: 100%;\" key={item.id} style={{ backgroundColor: highlighted ? '#eee' : 'transparent' }}>{item.label}</div>\n                }\n                value={this.state.value}\n                onChange={e => this.setState({ value: e.target.value })}\n                onSelect={value => this.setState({ value })}\n                inputProps={{ placeholder: 'Select item number' }}\n              />\n            </div>\n          </div>\n          <div className=\"col-1 pl-0 pr-0\">\n            <button class=\"btn btn-block btn-success mt-3\" onClick={this.searchData}> Search </button>\n          </div>\n        </div>\n        <div className=\"row container-fluid pr-0\">\n          {!isEmpty(this.state.data.selectedoutletLocation) &&\n            isEmpty(this.state.data.selectedoutletIdentifier) &&\n            isEmpty(this.state.data.selectedCategory) && (\n              <div className=\"col mt-5\">\n                <h6 className=\"heading\">\n                  Total Sales in outlets in{\" \"}\n                  {this.state.data.selectedoutletLocation}\n                </h6>\n                <TierOverview\n                  tierLtevelData={this.state.data.overallSalesOfSelectedTier}\n                  tier={this.state.data.selectedoutletLocation}\n                />\n              </div>\n            )}\n          {!isEmpty(this.state.data.selectedoutletLocation) &&\n            !isEmpty(this.state.data.selectedoutletIdentifier) &&\n            !isEmpty(this.state.data.selectedCategory) &&\n            isEmpty(this.state.tableData) && (\n              <div className=\"col-6 mt-5\">\n                <h6 className=\"heading\">\n                  Sales of {this.state.data.selectedCategory} based on fat\n                  content\n                </h6>\n                <CategoryView\n                  data={this.state.data.overallSalesOfSelectedCategory}\n                />\n              </div>\n            )}\n          {!isEmpty(this.state.data.selectedoutletLocation) &&\n            !isEmpty(this.state.data.selectedoutletIdentifier) &&\n            !isEmpty(this.state.data.selectedCategory) &&\n            isEmpty(this.state.tableData) && (\n              <div className=\"col-6 mt-5\">\n                <h6 className=\"heading\">\n                  Top 5 Item Sales in {this.state.data.selectedCategory}\n                </h6>\n                <CategorySalesView data={this.state.data.categorysalesData} />\n              </div>\n            )}\n          {isEmpty(this.state.data.selectedoutletLocation) &&\n            isEmpty(this.state.data.selectedoutletIdentifier) &&\n            isEmpty(this.state.tableData) && (\n              <div className=\"col-12 mt-5\">\n                <h6 className=\"heading\">Stores By Location</h6>\n                <PieChart />\n              </div>\n            )}\n          {!isEmpty(this.state.data.selectedoutletIdentifier) &&\n            isEmpty(this.state.tableData) &&\n            isEmpty(this.state.data.selectedCategory) && (\n              <div className=\"col-12 mt-5\">\n                <h6 className=\"heading\">\n                  Total sales based on categories in{\" \"}\n                  {this.state.data.selectedoutletIdentifier}\n                </h6>\n                <OutletOverview\n                  data={this.state.data.overallSalesOfSelectedOutlet}\n                />\n              </div>\n            )}\n\n          {!isEmpty(this.state.tableData) &&\n            !isEmpty(this.state.data.selectedoutletIdentifier) &&\n            !isEmpty(this.state.data.selectedoutletLocation) &&\n            !isEmpty(this.state.data.selectedCategory) &&\n            !isEmpty(this.state.value) && (\n              <div className=\"col-12 mt-5\">\n                <h6 className=\"heading\">Details for {this.state.value}</h6>\n\n                <Table striped bordered hover>\n                  <thead>\n                    <tr>\n                      <th>Fat Content</th>\n                      <th>Item Identifier</th>\n                      <th>MRP</th>\n                      <th>Outlet Sales</th>\n                      <th>Item Type</th>\n                      <th>Item Visibility</th>\n                      <th>Item Weight</th>\n                      <th>Outlet Estd Year</th>\n                      <th>Outlet Identifier</th>\n                      <th>Outlet Location Type</th>\n                      <th>Outlet Size</th>\n                      <th>Outlet Type</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {this.state.tableData.map((value, index) => {\n                      return (\n                        <tr>\n                          <td>{value.Item_Fat_Content}</td>\n                          <td>{value.Item_Identifier}</td>\n                          <td>${value.Item_MRP}</td>\n                          <td>${value.Item_Outlet_Sales}</td>\n                          <td>{value.Item_Type}</td>\n                          <td>{value.Item_Visibility}</td>\n                          <td>{value.Item_Weight}</td>\n                          <td>{value.Outlet_Establishment_Year}</td>\n                          <td>{value.Outlet_Identifier}</td>\n                          <td>{value.Outlet_Location_Type}</td>\n                          <td>{value.Outlet_Size}</td>\n                          <td>{value.Outlet_Type}</td>\n                          <td>\n                            {\" \"}\n                            <button\n                              class=\"btn btn-success\"\n                              title=\"Click here to compare item sales across various Outlets\"\n                              onClick={this.searchsData}\n                            >\n                              {\" \"}\n                              Compare\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            )}\n          {!isEmpty(this.state.itemsalesData) &&\n            !isEmpty(this.state.data.selectedoutletIdentifier) &&\n            !isEmpty(this.state.data.selectedoutletLocation) &&\n            !isEmpty(this.state.data.selectedCategory) &&\n            !isEmpty(this.state.value) && (\n              <div className=\"col-12 mt-5\">\n                <h6 className=\"heading\">\n                  {this.state.value} sales across outlets\n                </h6>\n                <Itemsales data={this.state.itemsalesData} />\n              </div>\n            )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nconst loginDetails = [\n  {\n    email: \"admin@gmail.com\",\n    password: \"admin\",\n  },\n  {\n    email: \"vaibhav@gmail.com\",\n    password: \"Vaibhav135\",\n  },\n  {\n    email: \"kesiya@gmail.com\",\n    password: \"kesiya\",\n  },\n  {\n    email: \"sayali@gmail.com\",\n    password: \"sayali\",\n  },\n  {\n    email: \"lekha@gmail.com\",\n    password: \"lekha\",\n  },\n];\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    showWarningBanner: false,\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    const data = { ...this.state };\n\n    const result = loginDetails.filter(\n      (user) => user.email === data.email && user.password === data.password\n    );\n    if (result.length === 1) {\n      localStorage.setItem(\"isLoggedIn\", true);\n      localStorage.setItem(\"email\", this.state.email);\n      window.location = \"/\";\n    } else {\n      this.setState({ showWarningBanner: true });\n    }\n  };\n\n  handleChange = (e) => {\n    if (e.currentTarget.name === \"email\") {\n      this.setState({ email: e.currentTarget.value });\n    } else {\n      this.setState({ password: e.currentTarget.value });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.showWarningBanner && (\n          <div className=\"alert alert-warning alert-dismissible\">\n            <button\n              type=\"button\"\n              className=\"close\"\n              data-dismiss=\"alert\"\n              onClick={() => this.setState({ showWarningBanner: false })}\n            >\n              &times;\n            </button>\n            Account already exists with same email address or phone number.\n          </div>\n        )}\n        <div className=\"container mt-5\">\n          <div className=\"row\">\n            <div className=\"col-md-5 m-auto\">\n              <img src=\"/AppLogo.jpeg\" alt=\"\" width=\"400\" height=\"400\" />\n            </div>\n            <div className=\"col-md-5 m-auto\">\n              <p className=\"lead text-center\">\n                Sign in to your GrocerSmart account\n              </p>\n              <div className=\"col\">\n                <form onSubmit={this.onSubmit} className=\"form-group\">\n                  <input\n                    type=\"email\"\n                    placeholder=\"Email Address\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                    className=\"form-control form-element mt-2\"\n                  />\n                  <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handleChange}\n                    className=\"form-control form-element mt-2\"\n                  />\n                  <button type=\"submit\" className=\"btn btn-info btn-block mt-4\">\n                    Submit\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Select from \"./common/Select\";\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport { Badge } from 'react-bootstrap';\nimport {Alert} from 'react-bootstrap';\n\n\n\n\nvar tier1_outlets = [\"OUT049\", \"OUT046\", \"OUT019\"];\nvar tier2_outlets = [\"OUT045\", \"OUT035\", \"OUT017\"];\nvar tier3_outlets = [\"OUT027\", \"OUT013\", \"OUT018\", \"OUT010\"];\n\nclass Predict extends React.Component {\n  state = {\n    data: {\n      outletLocation: \"\",\n      outletIdentifier: \"\",\n      category: \"\",\n      itemNumber: \"\",\n      options: [],\n      items: [],\n      selectedItem: \"\",\n      itemWeight: \"\",\n      itemPrice: \"\",\n      itemFatContent: \"\",\n      itemVisibility: 0,\n     \n    },\n    predictedValue: 0,\n    showPrediction: false,\n  };\n  componentDidMount() {\n    const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n    if (!isLoggedIn) {\n      window.location = \"/login\";\n    }\n  }\n  handleOutletChangeFetchCategories = async (e) => {\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ outlet: e.currentTarget.value }),\n    };\n    let response = await fetch(\n      \"http://13.59.56.212:5000/getcategoryBasedOnOutletIdentifier\",\n      requestOptions\n    );\n    response = await response.json();\n    console.log(\"category\", response.data);\n    data.options = response.data;\n    this.setState({ data });\n  };\n\n  handleSelectCategory = async (e) => {\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ category: e.currentTarget.value }),\n    };\n    let response = await fetch(\n      \"http://13.59.56.212:5000/getitemsBasedOnCategory\",\n      requestOptions\n    );\n    response = await response.json();\n    console.log(response.data);\n    data.items = response.data;\n    this.setState({ data });\n  };\n\n\n\n  handleSelect = (e) => {\n\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n    this.setState({ data });\n  };\n\n  handleOutletIdentifier = () => {\n    const data = { ...this.state.data };\n    if (data.outletLocation === \"Tier 1\") {\n      return tier1_outlets;\n    } else if (data.outletLocation === \"Tier 2\") {\n      return tier2_outlets;\n    } else if (data.outletLocation === \"Tier 3\") {\n      return tier3_outlets;\n    } else {\n      return [...tier1_outlets, ...tier2_outlets, ...tier3_outlets];\n    }\n  };\n\n  getItemDetails = async (e) => {\n    const data = { ...this.state.data };\n    data[e.currentTarget.name] = e.currentTarget.value;\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ itemNumber: e.currentTarget.value }),\n    };\n    let response = await fetch(\n      \"http://13.59.56.212:5000/getItemDetails\",\n      requestOptions\n    );\n    response = await response.json();\n    console.log(response.data);\n    data.itemPrice = response.data.Item_MRP;\n    data.itemWeight = response.data.Item_Weight;\n    data.itemFatContent = response.data.Item_Fat_Content;\n    data.itemVisibility = response.data.Item_Visibility;\n    this.setState({ data });\n\n  }\n\n  callPredict = async () => {\n    const data = { ...this.state.data };\n    console.log(data);\n    let requestJson = JSON.stringify({\n      itemNumber: data.selectedItem,\n      category: data.category,\n      itemFatContent: data.itemFatContent,\n      itemPrice: parseFloat(data.itemPrice),\n      itemVisibility: parseFloat(data.itemVisibility),\n      itemWeight: parseFloat(data.itemWeight),\n      outletIdentifier: data.outletIdentifier,\n      outletLocation: data.outletLocation\n    });\n    console.log(requestJson);\n  \n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: requestJson,\n    };\n  \n\n    let response = await fetch(\"http://13.59.56.212:5000/getPrediction\", requestOptions);\n    response = await response.json();\n\n    console.log(response);\n    this.setState({\n      predictedValue: response.data,\n      showPrediction: true\n    })\n\n\n  }\n\n  handleVisibilityChange = (e) => {\n    console.log(e.target.value);\n    this.setState({\n      itemVisibility: parseInt(e.target.value)\n    })\n  }\n\n\n  render() {\n    console.log(this.state);\n    const outletTypes = [\"Tier 1\", \"Tier 2\", \"Tier 3\"];\n    return (\n      <div style={{ paddingTop: '5%', paddingBottom: '5%' }}>\n        <div className=\" row container-fluid col-12\">\n          <div className=\"col-4\">\n            <div> <h4><Badge variant=\"success\">\n              Tier for Store\n  </Badge> </h4></div>\n            <Select\n              name=\"outletLocation\"\n              value={this.state.data.outletLocation}\n              onChange={this.handleSelect}\n              options={outletTypes}\n              default=\"Select Tier\"\n            />\n          </div>\n          <div className=\"col-4\">\n            <div> <h4><Badge variant=\"success\">\n              Outlet Name\n  </Badge></h4></div>\n            <Select\n              name=\"outletIdentifier\"\n              value={this.state.data.outletIdentifier}\n              onChange={this.handleOutletChangeFetchCategories}\n              options={this.handleOutletIdentifier()}\n              default=\"Select Outlet\"\n            />\n\n          </div>\n          <div className=\"col-4\">\n            <div> <h4> <Badge variant=\"success\">\n              Category of Product\n  </Badge> </h4> </div>\n            <Select\n              name=\"category\"\n              value={this.state.data.category}\n              onChange={this.handleSelectCategory}\n              options={this.state.data.options}\n              default=\"Select category\"\n            />\n          </div>\n        </div>\n        <div className=\" row container-fluid col-12\">\n          <div className=\"col-4\">\n            <div> <h4> <Badge variant=\"success\">  Item Number</Badge> </h4></div>\n            <Select\n              name=\"selectedItem\"\n              value={this.state.data.selectedItem}\n              onChange={this.getItemDetails}\n              options={this.state.data.items}\n              default=\"Select Items\" />\n          </div>\n          <div className=\"col-4\">\n            <h4> <Badge variant=\"success\">  Item Weight</Badge> </h4>\n            <input className=\"form-select my-3\" type=\"number\" placeholder=\"Enter Item Weight\" name=\"itemWeight\" value={this.state.data.itemWeight} onChange={this.handleSelect} />\n          </div>\n          <div className=\"col-4\">\n            <h4> <Badge variant=\"success\">  Item Price</Badge> </h4>\n            <input className=\"form-select my-3\" type=\"number\" placeholder=\"Enter Item Price\" name=\"itemPrice\" value={this.state.data.itemPrice} onChange={this.handleSelect} />\n          </div>\n\n        </div>\n\n        <div className=\"row col-12\">\n\n          <div className=\"slidecontainer\" style={{ width: '100%' }}>\n          <h4> <Badge variant=\"success\">  Item Visibility</Badge> </h4>\n            <input type=\"range\" min=\"0\" max=\"1\" step={0.0001} value={this.state.data.itemVisibility} style={{ width: '30%' }} className=\"slider\" name=\"itemVisibility\" onChange={this.handleSelect} />\n            <p>  <input type=\"number\" placeholder=\"Enter Item Visibility\" name=\"itemVisibility\" value={this.state.data.itemVisibility} onChange={this.handleSelect} /> </p>\n          </div>\n\n\n\n        </div>\n\n        <div className=\"row col-12\" style={{ paddingLeft: '47%' }}>\n          <button className=\"btn btn-success btn-lg\" onClick={this.callPredict}> Predict </button>\n        </div>\n\n        <div className=\"row col-12\" style={{paddingLeft: '35%', paddingTop: '2%'}} >\n          {this.state.showPrediction && <Alert variant='success'>\n       Predicted Sales for item {this.state.data.selectedItem} is {(this.state.predictedValue).toFixed(4)} thousand\n  </Alert>}\n        \n        </div>\n\n\n\n      </div>\n    );\n  }\n}\n\nexport default Predict;","import React from \"react\";\nimport { GoogleCharts } from \"google-charts\";\nimport NavBar from \"./components/navBar\";\nimport Dashboard from \"./components/dashboard\";\nimport Login from \"./components/login\";\nimport \"./App.css\";\nimport { Route, Link, Switch, Router } from \"react-router-dom\";\n\nimport Predict from \"./components/Predict\";\n\nfunction App() {\n  let arr = [];\n  const isLoggedIn = localStorage.getItem(\"isLoggedIn\");\n  const email = localStorage.getItem(\"email\");\n  return (\n    <div className=\"App\">\n      <NavBar isLoggedIn={isLoggedIn} email={email} />\n      <Switch>\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/predict\" component={Predict} />\n        <Route exact path=\"/login\" component={Login} />\n        <Route exact path=\"/\" component={Dashboard} />\n      </Switch>\n    </div>\n  );\n  function toggleButtonState() {\n    fetch(\"/getChartDetails\")\n      .then((res) => res.json())\n      .then((data) => {\n        arr = data.data;\n        GoogleCharts.load(drawChart);\n      });\n    getOutletIdentifierFromTier(\"Tier 2\");\n  }\n  function getOutletIdentifierFromTier(tierValue) {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ tier: tierValue }),\n    };\n    fetch(\"/getOutletNumberBasedOnTier\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n        arr = data.data;\n        console.log(arr);\n      });\n  }\n\n  function drawChart() {\n    // Standard google charts functionality is available as GoogleCharts.api after load\n    //const data = GoogleCharts.api.visualization.arrayToDataTable(arr);\n    const pie_1_chart = new GoogleCharts.api.visualization.ColumnChart(\n      document.getElementById(\"chart1\")\n    );\n    var data = GoogleCharts.api.visualization.arrayToDataTable(arr);\n    var options = {\n      width: \"100%\",\n      height: 400,\n      legend: { position: \"bottom\", maxLines: 3 },\n      bar: { groupWidth: \"75%\" },\n      isStacked: true,\n    };\n    pie_1_chart.draw(data, options);\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport {BrowserRouter} from \"react-router-dom\";\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <BrowserRouter>\n    \n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}